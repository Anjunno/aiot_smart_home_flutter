plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"
    id "dev.flutter.flutter-gradle-plugin"
}

//// ‚úÖ .env ÌååÏùº Î°úÎìú
def dotenv = new Properties()
def dotenvFile = file("$rootDir/../.env")
println("üîç dotenvFile path: ${dotenvFile.absolutePath}")

if (dotenvFile.exists()) {
    println("‚úÖ FOUND .env")
    dotenv.load(new FileInputStream(dotenvFile))
} else {
    throw new FileNotFoundException("‚ùå NOT_FOUND: ${dotenvFile.absolutePath}")
}

android {
    namespace = "com.example.smarthometest"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true // ‚úÖ ÌïÑÏàò
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        applicationId = "com.example.smarthometest"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName


        def kakaoKey = dotenv['KAKAO_NATIVE_APP_KEY']
        if(kakaoKey == null) {
            throw new GradleException("KAKAO_NATIVE_APP_KEY NOT FOUND")
        }
//        // ‚úÖ ÏΩòÏÜî ÌôïÏù∏Ïö©
        println("KAKAO_NATIVE_APP_KEY: ${kakaoKey}")
//
        // ‚úÖ buildConfigField / resValue (ÌïÑÏöîÏãú)
        buildConfigField "String", "KAKAO_NATIVE_APP_KEY", "\"${kakaoKey}\""
        resValue "string", "kakao_app_key", kakaoKey
//
//        // ‚úÖ AndroidManifest.xmlÏóêÏÑú ÏÇ¨Ïö©Ìï† placeholder
        manifestPlaceholders = [
                kakao_app_key: "${kakaoKey}"
        ]
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    // ‚úÖ desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

    // ‚úÖ Firebase
    implementation platform('com.google.firebase:firebase-bom:33.11.0')
    implementation 'com.google.firebase:firebase-analytics'
}


//plugins {
//    id "com.android.application"
//    id "kotlin-android"
//    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//    id "dev.flutter.flutter-gradle-plugin"
//}
//
//android {
//    namespace = "com.example.smarthometest"
//    compileSdk = flutter.compileSdkVersion
//    ndkVersion = flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
//
//    kotlinOptions {
//        jvmTarget = JavaVersion.VERSION_1_8
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId = "com.example.smarthometest"
//        // You can update the following values to match your application needs.
//        // For more information, see: https://flutter.dev/to/review-gradle-config.
//        minSdk = flutter.minSdkVersion
//        targetSdk = flutter.targetSdkVersion
//        versionCode = flutter.versionCode
//        versionName = flutter.versionName
////       .envÍ∞í ÏÇ¨Ïö©
////        buildConfigField "String", "KAKAO_NATIVE_APP_KEY", "\"${"kakao" + System.getenv("NATIVE_APP_KEY")}\""
//    }
//
//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig = signingConfigs.debug
//        }
//    }
//}
//
//flutter {
//    source = "../.."
//}

